name: CI Pipeline

on:
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run tests with coverage
      run: |
        dotnet test --no-build --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --logger trx \
          --logger "console;verbosity=detailed" \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat="cobertura" \
          /p:CoverletOutput=./coverage/
    
    - name: Generate coverage report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
      with:
        reports: 'coverage/**/coverage.opencover.xml'
        targetdir: 'coverage-report'
        reporttypes: 'Html;JsonSummary'
    
    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(cat coverage-report/Summary.json | jq -r '.summary.linecoverage')
        echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE%"
    
    - name: Check coverage threshold
      run: |
        COVERAGE=${{ steps.coverage.outputs.coverage }}
        THRESHOLD=90
        if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
          echo "❌::warning:: Coverage $COVERAGE% is below threshold $THRESHOLD%"
        else
          echo "✅ Coverage $COVERAGE% meets threshold $THRESHOLD%"
        fi
    
    - name: Comment coverage on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const coverage = ${{ steps.coverage.outputs.coverage }};
          const threshold = 90;
          const emoji = coverage >= threshold ? '✅' : '❌';
          const status = coverage >= threshold ? 'PASSED' : 'FAILED';
          
          const body = `## ${emoji} Test Coverage Report
          
          **Coverage**: ${coverage}% (Threshold: ${threshold}%)
          **Status**: ${status}
          
          ${coverage >= threshold ? 
            '🎉 Great job! Coverage meets the required threshold.' : 
            '⚠️ Coverage is below the required threshold. Please add more tests.'}
          
          ### Coverage Details
          - **Line Coverage**: ${coverage}%
          - **Required Minimum**: ${threshold}%
          - **Build**: ${coverage >= threshold ? 'PASSED' : 'FAILED'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage-report/
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/*.trx
          coverage/